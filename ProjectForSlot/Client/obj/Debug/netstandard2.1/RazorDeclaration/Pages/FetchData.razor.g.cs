// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ProjectForSlot.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "E:\FolderForPractise\ProjectForSlot\ProjectForSlot\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\FolderForPractise\ProjectForSlot\ProjectForSlot\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\FolderForPractise\ProjectForSlot\ProjectForSlot\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\FolderForPractise\ProjectForSlot\ProjectForSlot\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\FolderForPractise\ProjectForSlot\ProjectForSlot\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\FolderForPractise\ProjectForSlot\ProjectForSlot\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\FolderForPractise\ProjectForSlot\ProjectForSlot\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\FolderForPractise\ProjectForSlot\ProjectForSlot\Client\_Imports.razor"
using ProjectForSlot.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\FolderForPractise\ProjectForSlot\ProjectForSlot\Client\_Imports.razor"
using ProjectForSlot.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\FolderForPractise\ProjectForSlot\ProjectForSlot\Client\Pages\FetchData.razor"
using ProjectForSlot.Shared.Contracts;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/fetchdata")]
    public partial class FetchData : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 168 "E:\FolderForPractise\ProjectForSlot\ProjectForSlot\Client\Pages\FetchData.razor"
       
    private string forecasts;
    private string dose;
    private string vaccine;
    private string ageGrp;
    private bool flagSlot;
    private string date;

    private List<string> templates;

    private bool flag;
    private bool finalFlag;
    public OtpResponse otpResponse;
    public ValidateOtpResponse ValidateOtpResponse;

    public Dictionary<string, List<slot>> slotResponse;

    protected override Task OnInitializedAsync()
    {
        flag = true;
        templates = new List<string>();
        templates.Add("-Select State-");
        templates.Add("Delhi");
        templates.Add("Haryana");
        templates.Add("Punjab");
        slotResponse = new Dictionary<string, List<slot>>();
        flagSlot = true;
        DateTime dateTime = DateTime.UtcNow.Date;
        date = dateTime.ToString("dd/MM/yyyy");
        return base.OnInitializedAsync();
    }

    public async Task GetOtpViaApi()
    {
        flag = false;
        finalFlag = true;
        otpResponse = await Http.GetFromJsonAsync<OtpResponse>("WeatherForecast/GetOtp/" + forecasts);
        if (otpResponse != null)
        {
            flag = false;
            forecasts = "";
        }

    }
    public async Task VerifyOtp()
    {
        ValidateOtpResponse = await Http.GetFromJsonAsync<ValidateOtpResponse>("WeatherForecast/VerifyOtp/" + forecasts + "/" + otpResponse.txnId);
        if (ValidateOtpResponse != null)
        {
            finalFlag = false;
        }
    }
    public async Task FindCenters()
    {
        var dateinp = date;
        if (string.IsNullOrEmpty(date))
        {
            dateinp = "nothing";
        }
        else
        {
            dateinp = dateinp.Replace('/', '@');
        }
        flagSlot = false;
        slotResponse = await Http.GetFromJsonAsync<Dictionary<string, List<slot>>>("WeatherForecast/FindCenters/Delhi" + "/" + dose + "/" + vaccine + "/" + ageGrp + "/" + dateinp);
        if (slotResponse != null)
        {
            flagSlot = true;
            finalFlag = false;
        }
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
